name: Google to Notion Sync (New)

on:
  workflow_dispatch:
    inputs:
      test_offset:
        description: "시작 오프셋"
        required: false
        default: "0"
      test_limit:
        description: "처리 개수"
        required: false
        default: "0"
  repository_dispatch:
    types: [run-sync]

jobs:
  sync-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: 🔍 SECRET 상태 디버깅
        run: |
          echo "=== SECRETS 디버깅 시작 ==="
          echo "Google JSON Secret 길이: ${#GOOGLE_APPLICATION_CREDENTIALS_JSON}"
          echo "SPREADSHEET_ID: ${SPREADSHEET_ID:-'❌ 설정되지 않음'}"
          echo "NOTION_TOKEN 앞 10자: ${NOTION_TOKEN:0:10}..."
          echo "AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-'❌ 설정되지 않음'}"

          # Google JSON Secret 상세 검사
          if [ -z "$GOOGLE_APPLICATION_CREDENTIALS_JSON" ]; then
            echo "❌ CRITICAL: GOOGLE_APPLICATION_CREDENTIALS_JSON이 비어있습니다!"
            echo "GitHub Secrets에서 설정을 확인하세요."
            exit 1
          elif [ ${#GOOGLE_APPLICATION_CREDENTIALS_JSON} -lt 100 ]; then
            echo "❌ CRITICAL: Google JSON이 너무 짧습니다 (${#GOOGLE_APPLICATION_CREDENTIALS_JSON}자)"
            echo "실제 JSON 파일 전체 내용이 들어가야 합니다."
            exit 1
          else
            echo "✅ Google JSON Secret이 올바르게 설정되었습니다 (${#GOOGLE_APPLICATION_CREDENTIALS_JSON}자)"
          fi

          echo "=== SECRETS 디버깅 완료 ==="
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          echo "Python 패키지 설치 중..."
          pip install -r requirements.txt
          echo "✅ 패키지 설치 완료"

      - name: Install Chrome
        run: |
          echo "Chrome 설치 중..."
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable xvfb
          echo "✅ Chrome 설치 완료"

      - name: 📝 Google 인증 파일 생성 및 검증
        run: |
          echo "=== Google 인증 파일 생성 ==="

          # JSON 파일 생성
          echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}' > /tmp/google_credentials.json

          # 파일 검증
          file_size=$(wc -c < /tmp/google_credentials.json)
          echo "생성된 파일 크기: ${file_size} bytes"

          if [ $file_size -lt 100 ]; then
            echo "❌ 파일이 너무 작습니다!"
            echo "파일 내용:"
            cat /tmp/google_credentials.json
            exit 1
          fi

          # JSON 유효성 검사
          if python -c "import json; json.load(open('/tmp/google_credentials.json'))" 2>/dev/null; then
            echo "✅ 유효한 JSON 파일입니다"
          else
            echo "❌ 유효하지 않은 JSON 형식입니다"
            echo "파일 첫 100자:"
            head -c 100 /tmp/google_credentials.json
            exit 1
          fi

          echo "✅ Google 인증 파일 준비 완료"

      - name: 🚀 Python 스크립트 실행
        env:
          CHROME_BINARY: /usr/bin/google-chrome
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/google_credentials.json
          SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
          SHEET_RANGE: ${{ secrets.SHEET_RANGE }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SMORE_USER_DATA: ${{ secrets.SMORE_USER_DATA }}
          SMORE_PROFILE: ${{ secrets.SMORE_PROFILE }}
          TEST_OFFSET: ${{ github.event.inputs.test_offset || github.event.client_payload.test_offset || '0' }}
          TEST_LIMIT: ${{ github.event.inputs.test_limit || github.event.client_payload.test_limit || '0' }}
        run: |
          echo "=== 스크립트 실행 시작 ==="
          echo "TEST_OFFSET: $TEST_OFFSET"
          echo "TEST_LIMIT: $TEST_LIMIT"

          # 가상 디스플레이 설정
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

          # 환경변수 최종 확인
          echo "Google 인증 파일: $GOOGLE_APPLICATION_CREDENTIALS"
          echo "스프레드시트 ID: $SPREADSHEET_ID"

          # Python 스크립트 실행
          echo "🚀 google-to-notion.py 실행..."
          python google-to-notion.py

          echo "✅ 스크립트 실행 완료"
